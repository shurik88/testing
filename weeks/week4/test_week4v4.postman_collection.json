{
	"info": {
		"_postman_id": "4c57bdff-853c-4fa8-9773-751f26d94d12",
		"name": "test_week4",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "allDos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"var jsonData = pm.response.json();\r",
							"//var deadline = jsonData.deadline;\r",
							"\r",
							"const moment = require(\"moment\");\r",
							"var nowDate = moment(); // получает дату локальную\r",
							"console.log(nowDate);\r",
							"\r",
							"var finishDate = moment(nowDate).add(7,'days'); \r",
							"console.log(\"finishDate =\",finishDate)\r",
							"var startDate = moment(nowDate).subtract(7,'days'); \r",
							"console.log(\"startDate =\", startDate)\r",
							"\r",
							"console.log(jsonData.length)\r",
							"for( var i=0; i<jsonData.length; i++) {\r",
							"if  (jsonData[i].deadline<=finishDate) {\r",
							"    console.log(jsonData[i].deadline);\r",
							"    console.log(\"Success!\");\r",
							"}\r",
							"else {\r",
							"    console.log(jsonData[i].deadline);\r",
							"    console.log(\"Bad!\")\r",
							"}\r",
							"}\r",
							"\r",
							"\r",
							"/*\r",
							"var b = \"2021-01-29T00:00:00\";\r",
							"var c = \"2021-02-14T00:00:00\";\r",
							"\r",
							"\r",
							"const moment = require(\"moment\");\r",
							"var nowDate = moment(); // получает дату локальную\r",
							"moment.utc('2016-01-01T23:35:01');\r",
							"console.log(moment);\r",
							"\r",
							"var a = \"2021-02-25T00:00:00\";\r",
							"\r",
							"const myMomentObject = moment(str, 'YYYY-MM-DD')\r",
							"\r",
							"if (nowDate < a) {\r",
							"console.log(nowDate, a);\r",
							"    console.log(\"Success!\");\r",
							"}\r",
							"else {\r",
							"console.log(nowDate, a);\r",
							"    console.log(\"Bad!\");\r",
							"}\r",
							"*/"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/ToDos",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"ToDos"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetWeather",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var count = 0;\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"count = jsonData.length;\r",
							"\r",
							"if (pm.response.status == \"OK\") {\r",
							"  console.log( 'Success!', count);\r",
							"} else console.log( 'False!');\r",
							"\r",
							"//console.log(pm.response.json())"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/WeatherForecast?count=15",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"WeatherForecast"
					],
					"query": [
						{
							"key": "count",
							"value": "15"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AddToDo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var envNewDoId;\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"var id = jsonData.id;\r",
							"\r",
							"pm.environment.set(\"id\", id);\r",
							"console.log('id =', id)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"var id = \"55baa5b5-5bef-5e5e-b555-555e455ae455\";\r",
							"pm.environment.set(\"id\", id);\r",
							"\r",
							"var text = \"text55449\";\r",
							"pm.environment.set(\"text\", text);\r",
							"\r",
							"var priority = \"7\";\r",
							"pm.environment.set(\"priority\", priority);\r",
							"\r",
							"var deadline = \"2021-03-12T07:15:26\";\r",
							"pm.environment.set(\"deadline\", deadline);\r",
							"\r",
							"var tags = [\"bad wolf\", \"well done\", \"exterminate\"];\r",
							"pm.environment.set(\"tags\", tags);\r",
							"\r",
							"var name = \"Alex421\";\r",
							"pm.environment.set(\"name\", name);\r",
							"\r",
							"var email = \"random125@void.net\";\r",
							"pm.environment.set(\"email\", email);\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": \"{{id}}\",\r\n  \"text\": \"{{text}}\",\r\n  \"priority\": {{priority}},\r\n  \"deadline\": \"{{deadline}}\",\r\n  \"tags\": [\r\n    \"{{tags}}\"\r\n  ],\r\n  \"assignedTo\": {\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\"\r\n  }\r\n}"
				},
				"url": {
					"raw": "http://localhost:5000/api/ToDos",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"ToDos"
					],
					"query": [
						{
							"key": "count",
							"value": "15",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EditToDo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"var deadline = jsonData.deadline;\r",
							"const moment = require(\"moment\");\r",
							"nowDate = moment();\r",
							"\r",
							"if (deadline == null) {\r",
							"    deadline = moment(nowDate).add(3, 'day');\r",
							"    console.log( 'deadline = nowDate + 3 day!', deadline);\r",
							"} \r",
							"else { deadline = moment(deadline).add(3, 'day');\r",
							"console.log(\"deadline =\", deadline) \r",
							"}\r",
							"\r",
							"var tags = jsonData.tags;\r",
							"//tags.push({{$randomAbbreviation}});\r",
							"console.log(\"tags =\", tags)\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": \"9d7db3c3-0123-41e2-8795-af5365f7581d\",\r\n  \"text\": \"uniq{{$guid}}\",\r\n  \"priority\": 6,\r\n  \"deadline\": \"{{deadline}}\",\r\n  \"tags\": [\r\n    \"{{$randomAbbreviation}}\"\r\n  ],\r\n  \"assignedTo\": {\r\n    \"name\": \"{{$randomFirstName}}\",\r\n    \"email\": \"{{$randomEmail}}\"\r\n  }\r\n}"
				},
				"url": {
					"raw": "http://localhost:5000/api/ToDos/{{id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"ToDos",
						"{{id}}"
					],
					"query": [
						{
							"key": "count",
							"value": "15",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	]
}