Цели:
1.	Научиться продумывать и описывать тесты API, т.е написание тест-кейсов для api.
2.	Научиться работать со swagger.
3.	Научиться работать с pull request в github.
Задание
На предыдущей неделе вы осваивали инструмент инспектирования API-запросов fiddler, а также изучали http-запросы. Теперь вам необходимо будет применить эти знания, а также информацию, полученную на этой неделе, и описать тест-кейсы api в свободной форме.
Для этого вам необходимо:
1.	Получить последнюю версию ветки week2 (она появится, как только вы сольете все свои изменения в ветку week1, и я удалю week1, week1_...).
2.	Аналогично создать от ветки week2 свои ветки (week2_elena, week2_andrew, week2_sonya).
3.	Сбилдить и запустить контейнеры через docker-compose.
4.	Перейти по ссылке http://localhost:5000/api-docs. Изучить все запросы. Важно, внимательно посмотрите все статус коды, по предыдущему заданию вы указали не все статус коды(это нормально).
5.	Изучите интерфейс swagger (по нему вы будете работать с api дальше). Можете почитать здесь https://swagger.io/tools/swagger-ui/. Чтобы выполнить запрос через swagger ui выполните действия: нажмите «Try it out», укажите необходимые параметры, нажмите «Execute».
6.	Далее по каждому запросу опишите тест-кейсы в свободное форме: (что будете передавать, какие утверждения будете проверять и пр). Все это должно быть описано в текстовом документе (txt) с вашим именем (andrew, sonya, elena). Файл должен быть сохранен в папке weeks/week2. Пожалуйста не путайте ветки с папками – это разные вещи.
7.	По мере того, как будете выполнять задание (не надо ждать пока вы опишите все запросы, отправляйте по одному). Создайте pull request из вашей ветки в ветку week2, указав в качестве reviewer Ангелину(pinglivin), в качестве assigner – меня (shurik88). Дальше Ангелина будет уже писать комментарии на ваши задания в pull request, вы их должны увидеть на сайте, в github desktop, а также по идее должно приходить письмо на почту.
8.	Как только у Ангелины не будет замечаний, я перелью ветку, задание будет завершено.
Немного по pull request
Pull request — это отправка ваших изменений в репозитории на проверку другим людям.
Пример ситуации. Вы нашли ошибку в каком-то фреймворке или библиотеке и хотите исправить ошибку и отправить разработчикам, чтобы они внесли ваши изменения в master-ветку репозитория.  Pull request это отправка ваших изменений, но без вливания кода сразу в репозиторий. Вначале ваш commit проверят ответственные люди. 
Assigner – это тот пользователь, кто осуществляет перелив изменений.
Reveiwer – это тот пользователь, кто указывает замечания и рекомендации по внесенным изменениям .
