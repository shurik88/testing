название:
1.Получение списка дел (есть записи)
предусловие: 
На странице http://localhost:5000/todo  отображаются записи дел
Открыть страницу http://localhost:5000/api-docs
шаги:
1)Нажать GET /api/ToDos
2)Нажать «Try it out»
3)Нажать «Execute»
ожидаемый результат:
1)Появится поле параметров и ответов 
2)Предоставится возможность редактировать параметры, появится кнопка «Execute»
3)Отобразится статус код ответа: 200
Тело ответа, где количество объектов массива равно количеству записей дел
[
  {
    "id": строка,
    "text": строка,
    "priority": число
  }
]

название: 
2.Получение списка дел (нет записей)
предусловие: 
На странице http://localhost:5000/todo записей нет
Открыть страницу http://localhost:5000/api-docs
шаги:
1)Нажать GET /api/ToDos
2)Нажать «Try it out»
3)Нажать «Execute»
ожидаемый результат:
1)Появится поле параметров и ответов 
2)Предоставится возможность редактировать параметры, появится кнопка «Execute»
3)Отобразится статус код ответа: 200
Тело ответа с пустым массивом
[]

название: 
3.Добавление нового дела (успешно)
предусловие: 
Открыть страницу http://localhost:5000/api-docs
шаги:
1)Нажать POST /api/ToDos
2)Нажать «Try it out»
3)Заполнить поле Дело
{
    "id": "строка",
    "text": "строка",
    "priority": число
}
допустимыми значениями в соответствии со схемой
{
	description:	
		Дело
	id	string($uuid)
		nullable: true
		Идентификатор
	text*	string
		maxLength: 50
		Текст
	priority*	integer($int32)
		maximum: 10
		minimum: 1
		Важность
}
где uuid латинские буквы и цифры группами через дефис: 8-4-4-4-12
где максимально 50 символов в тексте
где приоритет от 1 до 10
например
{
  "id": "00000000-1111-2222-3333-444444444444",
  "text": "текст тестового дела",
  "priority": 2
}
4)Нажать «Execute»
5)Перейти на страницу http://localhost:5000/todo  
6)Проверить наличие дела в списке, и совпадение значений текста и приоритета
ожидаемый результат:
1)Появится поле параметров и ответов 
2)Предоставится возможность редактировать параметры, появится кнопка «Execute»
3)Поле дело заполнено в соответствии с указаниями
4)Можно успеть заметить загрузку, появление надписи Loading с кружком прогресса,
Отобразится статус код ответа: 200
Тело ответа
{
  "id": "bfcf0d55-fa8d-4630-88bb-e3a366edb151",
  "text": "текст тестового дела",
  "priority": 2
}
5)Откроется страница, на ней будет в списке запись дела с указанными значениями
текста и приоритетом.

название: 
4.Добавление нового дела (с неправильным форматом uuid)
предусловие: 
Открыть страницу http://localhost:5000/api-docs
шаги:
1)Нажать POST /api/ToDos
2)Нажать «Try it out»
3)Заполнить поле Дело(смотри схему в тест-кейсе -> Добавление нового дела (успешно) шаг 3)
но uuid заполнить некорректно
например
{
  "id": "123qaz",
  "text": "плохой уй",
  "priority": 7
}
4)Нажать «Execute»
ожидаемый результат:
1)Появится поле параметров и ответов 
2)Предоставится возможность редактировать параметры, появится кнопка «Execute»
3)Поле дело заполнено в соответствии с указаниями
4)Можно успеть заметить загрузку, появление надписи Loading с кружком прогресса,
Отобразится статус код ответа: 400 
Тело ответа с сообщением об ошибке uuid
{
  "type": "https://tools.ietf.org/html/rfc7231#section-6.5.1",
  "title": "One or more validation errors occurred.",
  "status": 400,
  "traceId": "|7c776f2-43851ec52fb7a129.",
  "errors": {
    "$.id": [
      "The JSON value could not be converted to System.Nullable`1[System.Guid]. Path: $.id | LineNumber: 0 | BytePositionInLine: 14."
    ]
  }
}

название: 
5.Добавление нового дела (с неправильным значением поля текст)
предусловие: 
Открыть страницу http://localhost:5000/api-docs
шаги:
1)Нажать POST /api/ToDos
2)Нажать «Try it out»
3)Заполнить поле Дело(смотри схему в тест-кейсе -> Добавление нового дела (успешно) шаг 3)
но символов в тексте более 50 или поле текст пустое
например
{
  "id": "00000123-1111-2222-3333-444444444444",
  "text": "123456789012345678901234567890123456789012345678901234567890",
  "priority": 3
}
4)Нажать «Execute»
ожидаемый результат:
1)Появится поле параметров и ответов 
2)Предоставится возможность редактировать параметры, появится кнопка «Execute»
3)Поле дело заполнено в соответствии с указаниями
4)Можно успеть заметить загрузку, появление надписи Loading с кружком прогресса,
Отобразится статус код ответа: 400 
Тело ответа с сообщением об ошибке длины текста
{
  "type": "https://tools.ietf.org/html/rfc7231#section-6.5.1",
  "title": "One or more validation errors occurred.",
  "status": 400,
  "traceId": "|7c7770a-43851ec52fb7a129.",
  "errors": {
    "Text": [
      "The field Text must be a string or array type with a maximum length of '50'."
    ]
  }
}

название: 
6.Добавление нового дела (с неправильным значением поля приоритет)
предусловие: 
Открыть страницу http://localhost:5000/api-docs
шаги:
1)Нажать POST /api/ToDos
2)Нажать «Try it out»
3)Заполнить поле Дело(смотри схему в тест-кейсе -> Добавление нового дела (успешно) шаг 3)
но задать значение приоритета меньше одного или больше десяти, например 
{
  "id": "00000123-1a11-2b22-3c33-4d4444444444",
  "text": "неправильный приоритет",
  "priority": 220
}
4)Нажать «Execute»
ожидаемый результат:
1)Появится поле параметров и ответов 
2)Предоставится возможность редактировать параметры, появится кнопка «Execute»
3)Поле дело заполнено в соответствии с указаниями
4)Можно успеть заметить загрузку, появление надписи Loading с кружком прогресса,
Отобразится статус код ответа: 400 
Тело ответа с сообщением об ошибке значения приоритета
{
  "type": "https://tools.ietf.org/html/rfc7231#section-6.5.1",
  "title": "One or more validation errors occurred.",
  "status": 400,
  "traceId": "|7c77714-43851ec52fb7a129.",
  "errors": {
    "Priority": [
      "The field Priority must be between 1 and 10."
    ]
  }
}

название: 
7.Добавление нового дела (с существующим uuid)
предусловие: 
Открыть страницу http://localhost:5000/api-docs
Сначала выполнить тест-кейс Добавление нового дела (успешно)
Скопировать значение Response body
шаги:
1)Нажать POST /api/ToDos
2)Нажать «Try it out»
3)Заполнить поле Дело, скопированным значением из тест-кейса Добавление нового дела (успешно)
например 
{
  "id": "b9f207e7-9882-4ad2-8499-8811f228f347",
  "text": "текст тестового дела",
  "priority": 2
}
4)Нажать «Execute»
5)Перейти на страницу http://localhost:5000/todo  
6)Проверить наличие двух одинаковых дел в списке
7)Выполнить шаги из тест-кейса Получение списка дел (есть записи)
ожидаемый результат:
1)Появится поле параметров и ответов 
2)Предоставится возможность редактировать параметры, появится кнопка «Execute»
3)Поле дело заполнено в соответствии с указаниями
4)Можно успеть заметить загрузку, появление надписи Loading с кружком прогресса,
Отобразится статус код ответа: 200
Тело ответа
{
  "id": "17042830-3371-4e9d-b53b-0799e1de2a19",
  "text": "текст тестового дела",
  "priority": 2
}
5)Откроется страница, на ней будут присутствовать два одинаковых дела
6)Как должна происходить обработка uuid узнать в ТЗ
7)Тело ответа содержит разные uuid
[
  {
    "id": "b9f207e7-9882-4ad2-8499-8811f228f347",
    "text": "текст тестового дела",
    "priority": 2
  },
  {
    "id": "17042830-3371-4e9d-b53b-0799e1de2a19",
    "text": "текст тестового дела",
    "priority": 2
  }
]

название: 
8.Получение дела (проверка некорректного формата uuid)
предусловие:
Нормальные uuid латинские буквы и цифры группами через дефис: 8-4-4-4-12
или он где-то генерируется или чето по ТЗ
Открыть страницу http://localhost:5000/api-docs
шаги:
1)Нажать GET /api/ToDos/{id}
2)Нажать «Try it out»
3)Задать некорректное значение id ввести например qwerty и нажать «Execute»
ожидаемый результат:
1)Появится поле параметров и ответов 
2)Предоставится возможность редактировать параметры, появится кнопка «Execute»
3)Поле ввода id будет подсвечено красным

название: 
9.Получение дела (проверка несуществующего uuid)
предусловие:
Удалить все записи дел на странице http://localhost:5000/todo
Открыть страницу http://localhost:5000/api-docs
шаги:
1)Нажать GET /api/ToDos/{id}
2)Нажать «Try it out»
3)Задать значение несуществующего id, например 17042930-3571-4e8d-b53b-0799e1de2a19 и нажать «Execute»
ожидаемый результат:
1)Появится поле параметров и ответов 
2)Предоставится возможность редактировать параметры, появится кнопка «Execute»
3)Отобразится статус код ответа: 404

название: 
10.Получение дела (успешно)
предусловие:
Существуют записи дел на странице http://localhost:5000/todo
если нет то создать или выполнить тест-кейс Добавление нового дела (успешно)
Открыть страницу http://localhost:5000/api-docs
шаги:
1)Нажать GET /api/ToDos
2)Нажать «Try it out»
3)Нажать «Execute»
4)Копируем uuid существующей записи дела, например e36cbdba-cf6e-4793-848c-a9bea108cf44
5)Нажать GET /api/ToDos/{id}
6)Нажать «Try it out»
7)Ввести скопированное значение uuid, в нашем примере e36cbdba-cf6e-4793-848c-a9bea108cf44 и нажать «Execute»
ожидаемый результат:
1)Появится поле параметров и ответов 
2)Предоставится возможность редактировать параметры, появится кнопка «Execute»
3)Отобразится статус код ответа: 200
Тело ответа, где количество объектов массива равно количеству записей дел
[
  {
    "id": строка,
    "text": строка,
    "priority": число
  }
]
4)Скопировали uuid
5)Появится поле параметров и ответов 
6)Предоставится возможность редактировать параметры, появится кнопка «Execute»
7)Отобразится статус код ответа: 200
тело ответа будет содержать искомую запись дела с заданным uuid

название: 
11.Удаление дела (успешно)
предусловие:
Существуют записи дел на странице http://localhost:5000/todo
если нет то создать или выполнить тест-кейс Добавление нового дела (успешно)
Открыть страницу http://localhost:5000/api-docs
шаги:
1)Нажать GET /api/ToDos
2)Нажать «Try it out»
3)Нажать «Execute»
4)Копируем uuid существующей записи дела, например e36cbdba-cf6e-4793-848c-a9bea108cf44
5)Нажать DELETE /api/ToDos/{id}
6)Нажать «Try it out»
7)Ввести скопированное значение uuid, в нашем примере e36cbdba-cf6e-4793-848c-a9bea108cf44 и нажать «Execute»
ожидаемый результат:
1)Появится поле параметров и ответов 
2)Предоставится возможность редактировать параметры, появится кнопка «Execute»
3)Отобразится статус код ответа: 200
Тело ответа, где количество объектов массива равно количеству записей дел
[
  {
    "id": строка,
    "text": строка,
    "priority": число
  }
]
4)Скопировали uuid
5)Появится поле параметров и ответов 
6)Предоставится возможность редактировать параметры, появится кнопка «Execute»
7)Отобразится статус код ответа: 204 (Элемент успешно удален)

название: 
12.Удаление дела (отсутствующий)
предусловие:
Открыть страницу http://localhost:5000/api-docs
шаги:
1)Нажать DELETE /api/ToDos/{id}
6)Нажать «Try it out»
7)Ввести несуществующий uuid или ранее удаленный, в нашем примере e36cbdba-cf6e-4793-848c-a9bea108cf44 и нажать «Execute»
ожидаемый результат:
1)Появится поле параметров и ответов 
2)Предоставится возможность редактировать параметры, появится кнопка «Execute»
3)Отобразится статус код ответа: 404 (Элемент не найден)

название: 
13.Удаление дела (неформат)
предусловие:
Открыть страницу http://localhost:5000/api-docs
шаги:
1)Нажать DELETE /api/ToDos/{id}
6)Нажать «Try it out»
7)Ввести некорректный uuid, например 123 и нажать «Execute»
ожидаемый результат:
1)Появится поле параметров и ответов 
2)Предоставится возможность редактировать параметры, появится кнопка «Execute»
3)Поле ввода id будет подсвечено красным

название: 
14.Редактирование дела (успешно, изменить текст и приоритет)
предусловие: 
Существуют записи дел на странице http://localhost:5000/todo
если нет то создать или выполнить тест-кейс Добавление нового дела (успешно)
Открыть страницу http://localhost:5000/api-docs
шаги:
1)Нажать GET /api/ToDos
2)Нажать «Try it out»
3)Нажать «Execute»
4)Копируем uuid существующей записи дела, например 68bb4708-ae1b-4092-b368-48ab412d4e72
5)Нажать PUT /api/ToDos/{id}
6)Нажать «Try it out»
7)В поле id ввести номер редактируемого дела, в нашем примере 68bb4708-ae1b-4092-b368-48ab412d4e72 
В поле Дело ввести новые корректные данные согласно схеме,
{
    "id": "строка",
    "text": "строка",
    "priority": число
}
допустимыми значениями в соответствии со схемой
{
	description:	
		Дело
	id	string($uuid)
		nullable: true
		Идентификатор
	text*	string
		maxLength: 50
		Текст
	priority*	integer($int32)
		maximum: 10
		minimum: 1
		Важность
}
где uuid латинские буквы и цифры группами через дефис: 8-4-4-4-12
где максимально 50 символов в тексте
где приоритет (важность не путать с влажностью) от 1 до 10 
в нашем примере
{
  "id": "68bb4708-ae1b-4092-b368-48ab412d4e72",
  "text": "отредачил",
  "priority": 3
}
8)Нажать «Execute»
9)Нажать GET /api/ToDos/{id}
10)Нажать «Try it out»
11)Ввести скопированное значение uuid, в нашем случае 68bb4708-ae1b-4092-b368-48ab412d4e72 и нажать «Execute»
12)Сверить результат из тела ответа со значениями введенными на шаге 6
ожидаемый результат:
1)Появится поле параметров и ответов 
2)Предоставится возможность редактировать параметры, появится кнопка «Execute»
3)В теле ответа будут представлены записи дел
4)Скопировали uuid
5)Появится поле параметров и ответов 
6)Предоставится возможность редактировать параметры, появится кнопка «Execute»
7)Заполнены поля id и дело
8)Статус код ответа: 200, в теле ответа будет отредактированная запись дела
9)Появится поле параметров и ответов 
10)Предоставится возможность редактировать параметры, появится кнопка «Execute»
11)Статус код ответа: 200, в теле ответа будет отображена запись дела
12)Записи должны совпадать

название: 
15.Редактирование дела (успешно с ненайденным уид )
предусловие: 
Существуют записи дел на странице http://localhost:5000/todo
если нет то создать или выполнить тест-кейс Добавление нового дела (успешно)
Открыть страницу http://localhost:5000/api-docs
шаги:
1)Нажать PUT /api/ToDos/{id}
2)Нажать «Try it out»
3)В поле id ввести значение несуществующего дела, например 70bb4710-ae1b-4092-b368-48ab412d4e72 
В поле Дело ввести новые корректные данные согласно схеме,
{
    "id": "строка",
    "text": "строка",
    "priority": число
}
в нашем примере
{
  "id": "70bb4710-ae1b-4092-b368-48ab412d4e72",
  "text": "без ид, поэтому новый ид",
  "priority": 2
}
4)Нажать «Execute»
ожидаемый результат:
1)Появится поле параметров и ответов 
2)Предоставится возможность редактировать параметры, появится кнопка «Execute»
3)Значения заполнены
4)Статус код ответа: 201 (Дело с идентификатором не было найдено, поэтому было создано новое дело)
В теле ответа будет представлена запись дела, в данном примере
{
  "id": "70bb4710-ae1b-4092-b368-48ab412d4e72",
  "text": "без ид, поэтому новый ид",
  "priority": 2
}

название: 
16.Редактирование дела (с некорректными данными)
предусловие: 
Существуют записи дел на странице http://localhost:5000/todo
если нет то создать или выполнить тест-кейс Добавление нового дела (успешно)
Открыть страницу http://localhost:5000/api-docs
шаги:
1)Нажать GET /api/ToDos
2)Нажать «Try it out»
3)Нажать «Execute»
4)Копируем uuid существующей записи дела, например 22c2035e-6de7-4f86-98fe-ea44a1be13dd
5)Нажать PUT /api/ToDos/{id}
6)Нажать «Try it out»
7)В поле id ввести номер редактируемого дела, в нашем примере 22c2035e-6de7-4f86-98fe-ea44a1be13dd 
В поле Дело ввести новые данные согласно схеме, но значение приоритета до 1 или более 10, например 50
{
  "id": "22c2035e-6de7-4f86-98fe-ea44a1be13dd",
  "text": "корректный текст",
  "priority": 50
}
8)Нажать «Execute»
ожидаемый результат:
1)Появится поле параметров и ответов 
2)Предоставится возможность редактировать параметры, появится кнопка «Execute»
3)В теле ответа будут представлены записи дел
4)Скопировали uuid
5)Появится поле параметров и ответов 
6)Предоставится возможность редактировать параметры, появится кнопка «Execute»
7)Заполнены поля id и дело
8)Статус код ответа: 400, в теле ответа будет сообщение об ошибке значения приоритета
в текущем примере тело ответа
{
  "type": "https://tools.ietf.org/html/rfc7231#section-6.5.1",
  "title": "One or more validation errors occurred.",
  "status": 400,
  "traceId": "|7c7776f-43851ec52fb7a129.",
  "errors": {
    "Priority": [
      "The field Priority must be between 1 and 10."
    ]
  }
}

название: 
17.Редактирование дела (с некорректными ид)
предусловие: 
Существуют записи дел на странице http://localhost:5000/todo
если нет то создать или выполнить тест-кейс Добавление нового дела (успешно)
Открыть страницу http://localhost:5000/api-docs
шаги:
1)Нажать GET /api/ToDos
2)Нажать «Try it out»
3)Нажать «Execute»
4)Копируем uuid существующей записи дела, например 22c2035e-6de7-4f86-98fe-ea44a1be13dd
5)Нажать PUT /api/ToDos/{id}
6)Нажать «Try it out»
7)В поле id ввести некорректный ид, например 12345 
В поле Дело ввести данные согласно схеме, например
{
  "id": "22c2035e-6de7-4f86-98fe-ea44a1be13dd",
  "text": "корректный текст2",
  "priority": 6
}
8)Нажать «Execute»
ожидаемый результат:
1)Появится поле параметров и ответов 
2)Предоставится возможность редактировать параметры, появится кнопка «Execute»
3)В теле ответа будут представлены записи дел
4)Скопировали uuid
5)Появится поле параметров и ответов 
6)Предоставится возможность редактировать параметры, появится кнопка «Execute»
7)Заполнены поля id и дело
8)Статус код ответа: 500 Error: Internal Server Error

название: 
18.Получение прогноза погоды (проверка значения по умолчанию)
предусловие: 
Открыть страницу http://localhost:5000/api-docs
шаги:
1)Нажать GET /api/WetherForecast
2)Нажать «Try it out»
3)Значение count оставить по умолчанию равным 5 и нажать «Execute»
ожидаемый результат:
1)Появится поле параметров и ответов 
2)Предоставится возможность редактировать параметры, появится кнопка «Execute»
3)Статус код ответа: 200
Тело ответа, где количество объектов массива равно значению count=5
[
  {
    "date": строка,
    "temperatureC": число,
    "temperatureF": число,
    "summary": строка
  }
]

название: 
19.Получение прогноза погоды (проверка при допустимом значении)
предусловие:
Допустимые значения от 1 до 10, используем например count=3 
Открыть страницу http://localhost:5000/api-docs
шаги:
1)Нажать GET /api/WetherForecast
2)Нажать «Try it out»
3)Значение count ввести 3 и нажать «Execute»
ожидаемый результат:
1)Появится поле параметров и ответов 
2)Предоставится возможность редактировать параметры, появится кнопка «Execute»
3)Статус код ответа: 200
Тело ответа, где количество объектов массива равно значению count=3
[
  {
    "date": строка,
    "temperatureC": число,
    "temperatureF": число,
    "summary": строка
  }
]

название: 
20.Получение прогноза погоды (проверка граничных значений)
предусловие:
Граничные значения 1 и 10, используем например count=1
Открыть страницу http://localhost:5000/api-docs
шаги:
1)Нажать GET /api/WetherForecast
2)Нажать «Try it out»
3)Значение count ввести 1 и нажать «Execute»
ожидаемый результат:
1)Появится поле параметров и ответов 
2)Предоставится возможность редактировать параметры, появится кнопка «Execute»
3)Статус код ответа: 200
Тело ответа, где количество объектов массива равно значению count=1
[
  {
    "date": строка,
    "temperatureC": число,
    "temperatureF": число,
    "summary": строка
  }
]

название: 
21.Получение прогноза погоды (проверка приграничных значений)
предусловие:
Приграничные значения -1, 0 и 11, используем например count=11
Открыть страницу http://localhost:5000/api-docs
шаги:
1)Нажать GET /api/WetherForecast
2)Нажать «Try it out»
3)Значение count ввести 11 и нажать «Execute»
ожидаемый результат:
1)Появится поле параметров и ответов 
2)Предоставится возможность редактировать параметры, появится кнопка «Execute»
3)Статус код ответа: 400 Error: Bad Request
Тело ответа строка сообщения
Count value should be between 1 and 10

название: 
22.Получение прогноза погоды (проверка ввода недопустимых значений)
предусловие:
Недопустимые значения - символы, знаки препинания, пробел, используем например count=asd
Открыть страницу http://localhost:5000/api-docs
шаги:
1)Нажать GET /api/WetherForecast
2)Нажать «Try it out»
3)Значение count ввести asd и нажать «Execute»
ожидаемый результат:
1)Появится поле параметров и ответов 
2)Предоставится возможность редактировать параметры, появится кнопка «Execute»
3)Поле ввода count будет подсвечено красным