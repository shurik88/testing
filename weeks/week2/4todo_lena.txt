метод Get - получение списка дел
1) предусловие - есть хотя бы одно дело(id)
2) вызываем метод get 
 2.1) проверяем статус код - видим 200 (список получен)
 2.2) схема   {
    "id": "X",
    "text": "Y",
    "priority": Z
  }
 2.3) данные - получено столько элементов {}, сколько дел в списке


метод Delete - Удаление дела
1) предусловие - есть существующее в системе дело(id)
2) запускаем метод delete по этому id
3) получаем статус код 204 - дело успешно удалено
4) запускаем метод Delete по этому же айди(удаленного дела) - получаем код 404 - дело не найдено


метод Put - Редактирование дела
1) предусловие - есть дело(id)
2) вызываем put - получаем схему {
    "id": "X",
    "text": "Y",
    "priority": Z
  }
 2.1) в id копируем айди
 2.2) в request body меняем text на любой, priority = 5
     получаем 200 c измененными полями в response
после успешного редактирования дела вызывается get с обновленным списком дел

3) передаем некое новое айди(сгенеренное), остальные поля те же, получаем 201 (создано новое дело)
после успешного добавления дела вызывается get с обновленным списком дел

4) проверяем поле priority на невалидность:
 4.1) вводим в priority букву алфавита, вызываем метод Put, получаем статус код 400 и в теле ответа ("'0xD0' is an invalid start of a value")
 4.2) вводим в priority цифру больше 10, вызываем метод Put, получаем код 400 и в теле ответа:
      "The field Priority must be between 1 and 10.")
 4.3) вводим в priority 0, вызываем метод Put, получаем статус код 400 и в теле ответа: "The field Priority must be between 1 and 10."
 4.4) отрицательное число
 4.5) нецелое число

5) Проверяем поле priority на граничные значения: 1 и 10
 5.1)запускаем метод put с priority=1, получаем статус код 200(дело добавлено)
 5.2)запускаем метод put с priority=10, получаем статус код 200(дело добавлено)



метод Post - Добавление нового дела
предусловие - можем сгенерить валидный id дела для добавления, которого не существует в системе
1) в теле запроса вставляем:
 {
  "id": "сгенеренный id",
  "text": "любой текст",
  "priority": цифра от 1 до 10
}

1.1) запускаем метод Post, получаем статус код 200(дело добавлено), в теле ответа то же что в теле запроса. Схема  {
    "id": "X",
    "text": "Y",
    "priority": Z
  }
после успешного добавления дела вызывается get с обновленным списком дел

2) Проверяем граничные значения (1 и 10).
 2.1)запускаем метод Post с priority=1, получаем статус код 200(дело добавлено)
 2.2)запускаем метод Post с priority=10, получаем статус код 200(дело добавлено)

после успешного добавления дела вызывается get с обновленным списком дел

3) запускаем метод Post с некорректными полем priority, то есть всё то же самое с полем Priority что описано в п 4. для метода Put
получаем статус код 400 и в теле ответа  "The field Priority must be between 1 and 10."
4) запускаем метод Post  с пустыми полями text и priority, получаем статус код 400
5) запускаем метод Post  с пустым полем text и валидным priority - получаем 400 ("errors": {
    "Text": [
      "The Text field is required.")
6) запускаем метод Post  с заполненным полем text и пустым priority - получаем 400 (priority": [
      "'}' is an invalid start of a value.)
7) вставляем в srting очень много букв без пробелов, запускаем метод Post - получаем 400 ( "The field Text must be a string or array type with a maximum length of '50'.") 



метод Get - получение дела
1) предусловие - есть дело и его айди
2) вводим айди, запускаем метод Get, получаем статус код 200 - дело получено
3) проверяем данные: 
{
  "id": "5bea13a3-1ea4-4b8f-8fb8-759bf2bdc297",
  "text": "1",
  "priority": 1
}
4) вводим айди несуществующего дела, запускаем метод Get, получаем статус код 404 (элемент не найден)
