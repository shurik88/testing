


GET ​/api​/ToDos Получение списка дел

1. 
Нет данных. Отправить запрос. 
Получить 200 code, пустой body 

2.
Добавить 1 список дел. Отправить запрос. 
Добавить несколько списков дел. Отправить запрос. 
Получить списки дел. 

Ответ должен быть вида: 200 code 
Ответ в body - все списки дел, схема вида: 
[
  {
    "id": "string($uuid)",
    "text": "string",
    "priority": integer($int32)
  }
]

3. 
Изменить параметры в списке дел. Отправить запрос. 
Получить обновленныый список дел. Измененный список отображается с актуальными параметрами.

4.
Удалить данные (список дел). Отправить запрос. 
Получить обновленныый список дел. Удаленного списка нет.



POST ​/api​/ToDos Добавление нового дела

5. 
Добавить новое дело с корректно заполненными параметрами  "id", "text", "priority".
Ответ должен быть вида: 200 code 
5a) Ответ в body с параметрами идентичными отправленным 
Схема вида: 
[
  {
    "id": "string($uuid)",
    "text": "string",
    "priority": integer($int32)
  }
]
5б) Получить список дел. Проверить что присутствует новое дело, все параметры идентичны отправленным.
5в) Получить дело по "id". Проверить что пришло добавленное дело, все параметры идентичны отправленным.

6.
Добавить новое дело с корректно заполненными параметрами  "text", "priority".
Ответ должен быть вида: 200 code 
6a) Ответ в body с параметрами идентичными отправленным, необязательный параметр "id" формируется системой автоматически 
Схема вида: 
[
  {
    "id": "string($uuid)",
    "text": "string",
    "priority": integer($int32)
  }
]
6б) Получить список дел. Проверить что присутствует новое дело, все параметры идентичны отправленным, необязательный параметр "id" формируется системой автоматически.
6в) Получить дело по "id". Проверить что пришло добавленное дело, все параметры идентичны отправленным.

7.
7а)
Проверка передать пустую схему.
Ответ 400 code 

7б)
Проверка передать некорректную схему.
Проверка не передать обязательный параметр "text".
Проверка не передать обязательный параметр "priority".

Ответ 400 code 
body с указанием списка проблем (параметра и ошибки валидации) в "errors"
Схема вида:
{
  "type": "...",
  "title": "One or more validation errors occurred.",
  "status": 400,
  "traceId": "...",
  "errors": {
    "параметр": [
      "ошибка валидации"
    ]
  }
}

8.
8a)
Проверка граничных значений по параметру "text". на 1, 49, 50 символов (с пробелами и без, с переносом строки и без)
Ответ 200 Ok

Проверка граничных значений по параметру "text". на 0, 51, 100 символов (с пробелами и без, с переносом строки и без)
Ответ 400 bad request

8б) 
Проверка на пустое значение параметра "text". 
Ответ 400 bad request

8в)
Проверка некорректных значений по параметру "text". (спецсимволы)
Ответ 400 bad request


9.
9a)
Проверка граничных значений по параметру "priority".  1, 5, 10
Ответ 200 Ok

Проверка граничных значений по параметру "priority".  -100, -1, 0, 11, 100
Ответ 400 bad request

9б)
Проверка на пустое значение параметра "priority". 
Ответ 400 bad request

9в)
Проверка некорректным значений по параметру "priority".  != int32 (цифробуквенный ввод, спецсимволы, английский и латинский алфавит)
Ответ 400 bad request

10. 
10а)
Проверка на корректное значение параметра "id". (соответствие виду "xxxxxxxx-xxxx-хxxx-хxxx-xxxxxxxxxxxx", можно использовать 0-9, a-f, A-F)

10б)
Проверка граничных значений по параметру "id".  "00000000-0000-0000-0000-000000000000", рандомный uuid, "FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF"
Ответ 200 Ok

10в)
Проверка на пустое значение параметра "id". 
Ответ 400 bad request

10г)
Проверка некорректных значений по параметру "id".  != uuid  (несоответствие виду "xxxxxxxx-xxxx-хxxx-хxxx-xxxxxxxxxxxx", использование спецсимволов, латинского алфавита, английского после "F")
Ответ 400 bad request

