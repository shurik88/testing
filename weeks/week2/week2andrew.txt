



GET ​/api​/ToDos Получение списка дел

1. 
Нет данных. Отправить запрос. 
Получить 200 code, пустой body 

2.
Добавить данные (несколько списков дел). Отправить запрос. 
Получить списки дел. 

Ответ должен быть вида: 200 code 
Ответ в body - все списки дел, схема вида: 
[
  {
    "id": "string($uuid)",
    "text": "string",
    "priority": integer($int32)
  }
]

3. 
Изменить данные (параметры в списке дел). Отправить запрос. 
Получить обновленныый список дел. Измененный список отображается с актуальными параметрами.

4.
Удалить данные (список дел). Отправить запрос. 
Получить обновленныый список дел. Удаленного списка нет.



POST ​/api​/ToDos Добавление нового дела

5. 
Добавить новое дело с корректно заполненными параметрами  "id", "text", "priority".
Ответ должен быть вида: 200 code, Description Success, 
Ответ в body с параметрами идентичными отправленным 
Схема вида: 
[
  {
    "id": "string($uuid)",
    "text": "string",
    "priority": integer($int32)
  }
]
Получить список дел. Проверить что отображается новое дело, все параметры идентичны отправленным.

6.
Добавить новое дело с корректно заполненными параметрами  "text", "priority".
Ответ должен быть вида: 200 code, Description Success, 
Ответ в body с параметрами идентичными отправленным, необязательный параметр "id" формируется системой автоматически 
Схема вида: 
[
  {
    "id": "string($uuid)",
    "text": "string",
    "priority": integer($int32)
  }
]
Получить список дел. Проверить что отображается новое дело, все параметры идентичны отправленным, необязательный параметр "id" формируется системой автоматически.


7.
Проверка передать некорректную схему.
Проверка передать пустую схему.
Проверка не передать обязательный параметр "text".
Проверка не передать обязательный параметр "priority".

Ответ 400 code 
body с указанием списка проблем (параметра и ошибки валидации) в "errors"
Схема вида:
{
  "type": "...",
  "title": "One or more validation errors occurred.",
  "status": 400,
  "traceId": "...",
  "errors": {
    "параметр": [
      "ошибка валидации"
    ]
  }
}

8.

Проверка на пустое значение параметра "text". 
Проверка граничных значений по параметру "text". 1, 49, 50, 51, 100 символов, с пробелами и без, с переносом строки и без
Проверка некорректным значений по параметру "text". (спецсимволы)


9.
Проверка на пустое значение параметра "priority". 
Проверка граничных значений по параметру "priority".  -100, -1, 0, 1, 5, 10, 11, 100
Проверка некорректным значений по параметру "priority".  != int32 (цифробуквенный ввод, спецсимволы, английский и латинский алфавит)


10. 
Проверка на корректное значение параметра "id". (соответствие виду "xxxxxxxx-xxxx-хxxx-хxxx-xxxxxxxxxxxx", можно использовать 0-9, a-f, A-F)
Проверка на пустое значение параметра "id". 
Проверка граничных значений по параметру "id".  "00000000-0000-0000-0000-000000000000", рандомный uuid, "FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF"
Проверка некорректным значений по параметру "id".  != uuid  (несоответствие виду "xxxxxxxx-xxxx-хxxx-хxxx-xxxxxxxxxxxx", использование спецсимволов, латинского алфавита, английского после "F")
