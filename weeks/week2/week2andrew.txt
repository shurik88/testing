
-----------------------------------------------
GET ​/api​/ToDos Получение списка дел

1. 
1а) Получение списка дел на чистой системе, позитивная проверка. (аналогично когда все дела удалены)
Подготовка: чистая система, нет дел.
Тест: Получить список дел 
Получить 200 code, пустой body 

1б) Получение списка дел после добавлении одного дела, позитивная проверка.
Подготовка: Добавить новое дело01. 
Тест: Получить список дел 
Ответ 200 code, в body дело01 
схема вида: 
[
  {
    "id": "string($uuid)",
    "text": "string",
    "priority": integer($int32)
  }
]
Проверка: дело01 отображается в списке дел с параметрами идентичными полученным в body при добавлении дела.

1в) Получение списка дел после добавлении нескольких дел, позитивная проверка.
Подготовка: Добавить 2 и более новых дел. 
Тест: Получить список дел 
Ответ 200 code, в body список дел, схема вида: 
[
  {
    "id": "string($uuid)",
    "text": "string",
    "priority": integer($int32)
  }
]
Проверка: все дела отображается в списке дел с параметрами идентичными полученным в body при добавлении дел.

-----------------------------------------------
POST ​/api​/ToDos Добавление нового дела

2. 
2а) Добавление нового дела только с обязательными параметрами, позитивная проверка.
Тест: Добавить новое дело03 с набором корректных значений для обязательных параметров: "text", "priority".
Ответ 200 code, в body параметры идентичными отправленным, необязательный параметр "id" формируется системой автоматически. 
Схема вида: 
[
  {
    "id": "string($uuid)",
    "text": "string",
    "priority": integer($int32)
  }
]
Проверка: Получить дело по "id". Проверить что пришло добавленное дело, все параметры идентичны полученным в body при добавлении дела.

2б) Добавление нового дела со всеми параметрами, позитивная проверка
Тест: Добавить новое дело04 с набором корректных значений для всех параметров.
Ответ 200 code, body с параметрами "text", "priority" идентичными отправленным, "id" формируется системой автоматически 
Проверка: Получить дело по "id". Проверить что пришло добавленное дело, все параметры идентичны полученным в body при добавлении дела.

2в) Добавление нового дела с одинаковыми параметрами более 1 раза, позитивная проверка
Тест: Добавить новое дело05 со всеми параметрами заполненными идентично делу04.
Ответ 200 code, body с параметрами "text", "priority" идентичными отправленным, "id" формируется системой автоматически 
Проверка: Получить дело по "id". Проверить что пришло добавленное дело, все параметры идентичны полученным в body при добавлении дела.

3.
3а) Валидация по некорректной схеме, негативная проверка. 
Проверка передать некорректную схему.
Ответ 400 code, Error: Bad Request
body с указанием списка проблем (параметра и ошибки валидации) в "errors"
Схема вида:
{
  "type": string,
  "title": string,
  "status": error code,
  "traceId": string,
  "errors": {
    "параметр": [
      "ошибка валидации"
    ]
  }
}

3б) Валидация по всем обязательным параметрам, негативная проверка.
Проверка передать набор некорректных значений для обязательных параметров: "text", "priority".
Ответ 400 code, Error: Bad Request
body с указанием списка проблем (параметра и ошибки валидации) в "errors"

3в) Валидация по всем параметрам, негативная проверка.
Проверка передать набор некорректных значений для всех параметров.
Ответ 400 code, Error: Bad Request
body с указанием списка проблем (параметра и ошибки валидации) в "errors"


-----------------------------------------------
GET ​/api​/ToDos​/{id} Получение дела
  
4.
4а) Получение нового дела, позитивная проверка.
Подготовка: Добавить новое дело06
Тест: передать на получение дела Id дела06
Ответ 200 code, body с параметрами дела06
Схема вида: 
[
  {
    "id": "string($uuid)",
    "text": "string",
    "priority": integer($int32)
  }
]

4б) Получение существующего дела, позитивная проверка.
Подготовка: Получить список дел, выбрать существующее дело07
Тест: передать на получение дела Id из дела07
Ответ 200 code, body с параметрами дела07

5. 
Проверка на несуществующий id, негативная проверка.
Тест: Передать на получение дела Id отличный от существующих в списке дел
Ответ 404 code, Error: Not Found, body с параметром {id}

-----------------------------------------------
DELETE ​/api​/ToDos​/{id} Удаление дела

6.
6a) Удаление нового дела, позитивная проверка
Подготовка: Добавить новое дело08
Тест: передать на удаление дела Id дела08.
Ответ 204 code
Проверка: Получить дело06 по "id". Проверить что ответ 404 code.

6б) Удаление существующего дела, позитивная проверка
Подготовка: Получить список дел, выбрать существующее дело09
Тест: передать на удаление дела Id дела09.
Ответ 204 code
Проверка: Получить дело07 по "id". Проверить что ответ 404 code.

7. 
Удаление дела с несуществующим id, негативная проверка
Тест: Передать на удаление Id отличный от существующих в списке дел
Ответ 404 code, Error: Not Found, body с параметром {id}

-----------------------------------------------
PUT ​/api​/ToDos​/{id} Редактирование дела

8.
8а) Редактирование дела без изменения параметров, позитивная проверка
Подготовка: Получить список дел, выбрать существующее дело10
Тест: В body не изменять параметры. Передать id дела10 на редактирование дела.
Ответ 200 code, body с параметрами идентичными отправленным 
Проверка: Получить дело10 по "id". Проверить что параметры остались без изменений.

8б) Редактирование дела по всем параметрам, позитивная проверка
Подготовка: Получить список дел, выбрать существующее дело11
Тест: В body изменить все параметры. Передать id дела11 на редактирование дела.
Ответ 200 code, body с параметрами идентичными отправленным 
Схема вида: 
[
  {
    "id": "string($uuid)",
    "text": "string",
    "priority": integer($int32)
  }
]
Проверка: Получить дело11 по "id". Проверить что все измененные параметры актуальны.

8в) Редактирование дела по обязательным параметрами, позитивная проверка
Подготовка: Получить список дел, выбрать дело12
Тест: В body изменить параметров "text", "priority". Передать id дела12 на редактирование дела.
Ответ 200 code, body с параметрами идентичными отправленным 
Проверка: Получить дело12 по "id". Проверить что все измененные параметры актуальны.

9. Редактирование несуществующего дела, позитивная проверка.
Тест: Передать Id отличный от существующих в списке дел. 
Ответ 201 сode, дело с идентификатором не было найдено, поэтому было создано новое дело 
body с параметрами идентичными отправленным 
Схема вида: 
[
  {
    "id": "string($uuid)",
    "text": "string",
    "priority": integer($int32)
  }
]
Проверка: Получить дело по "id". Проверить что все параметры идентичны полученным в body при редактировании дела.

10.
10а)Валидация по некорректной схеме, негативная проверка.
Проверка передать некорректную схему.
Ответ 400 code, Error: Bad Request
body с указанием списка проблем (параметра и ошибки валидации) в "errors"

10б) Валидация по всем параметрам, негативная проверка.
Проверка передать негативные значения для всех параметров.
Ответ 400 code, Error: Bad Request
body с указанием списка проблем (параметра и ошибки валидации) в "errors"
Схема вида:
{
  "type": string,
  "title": string,
  "status": error code,
  "traceId": string,
  "errors": {
    "параметр": [
      "ошибка валидации"
    ]
  }
}

10в) Валидация по всем обязательным параметрам, негативная проверка.
Проверка передать негативные значения для параметров "text", "priority".
Ответ 400 code, Error: Bad Request
body с указанием списка проблем (параметра и ошибки валидации) в "errors"


-----------------------------------------------
GET ​/api​/WeatherForecast Получение прогноза погоды

11
11а) Проверка получения прогноза погоды по умолчанию, позитивная проверка
Передать запрос GET http://pc-1:5000/api/WeatherForecast
Ответ 200 code, body со списком 5 прогнозов погоды. 

11б) Проверка граничных значений по параметру "count", позитивная проверка. 
Тест: Передать значения 1, 5, 10
Ответ 200 code, body со списком прогнозов погоды
Схема вида:
[
  {
    "date": string($date-time),
    "temperatureC": integer($int32),
    "temperatureF": integer($int32),
    "summary": "string"
  }
]

12.
12а) Проверка граничных значений по параметру "count", негативная проверка.  
Тест: Передать значения -100, -1, 0, 11, 100
Ответ 400 code, Error: Bad Request
с телом ответа "Count value should be between 1 and 10"

12б)
Передать "count" в некорректном формате, негативная проверка
Тест: Передать набор некорректных значений != int32 (пустое, цифробуквенный ввод, спецсимволы, английский и латинский алфавит)
Ответ в swagger: ошибка валидации.
Ответ в postman: 400 code
